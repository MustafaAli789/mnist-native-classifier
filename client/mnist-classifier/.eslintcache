[{"C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\index.js":"1","C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\App.js":"2","C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\reportWebVitals.js":"3","C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\Components\\Canvas.js":"4","C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\Components\\PredictionBar.js":"5"},{"size":500,"mtime":1608778215265,"results":"6","hashOfConfig":"7"},{"size":3508,"mtime":1608875818283,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1522,"mtime":1608848091434,"results":"10","hashOfConfig":"7"},{"size":814,"mtime":1608875719393,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"v761hg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\index.js",[],["24","25"],"C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\App.js",["26","27"],"C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\reportWebVitals.js",[],"C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\Components\\Canvas.js",["28"],"import React, { useRef, useEffect, useState } from 'react';\r\n\r\nfunction Canvas() {\r\n    \r\n    const [pos, _setPos] = useState({x:0,y:0})\r\n    const posRef = useRef(pos)\r\n\r\n    const setPos = data => {\r\n        posRef.current = data\r\n        _setPos(data)\r\n    }\r\n\r\n    function getMousePos(canvas, evt) {\r\n        var rect = canvas.getBoundingClientRect();\r\n        return {\r\n          x: evt.clientX - rect.left,\r\n          y: evt.clientY - rect.top\r\n        };\r\n    }\r\n\r\n    const canvasRef = useRef(null)\r\n\r\n    function draw(e) {\r\n        // mouse left button must be pressed\r\n        if(canvasRef === null) return\r\n        let ctx = canvasRef.current.getContext(\"2d\")\r\n\r\n        if (e.buttons !== 1) return;\r\n        ctx.beginPath(); // begin\r\n        \r\n        ctx.lineWidth = 25;\r\n        ctx.lineCap = 'round';\r\n        ctx.strokeStyle = 'black';\r\n      \r\n        ctx.moveTo(posRef.current.x, posRef.current.y); // from\r\n        setPos(getMousePos(canvasRef.current, e));\r\n        ctx.lineTo(posRef.current.x, posRef.current.y); // to\r\n      \r\n        ctx.stroke(); // draw it!\r\n      }\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener('mousemove', draw);\r\n        document.addEventListener('mousedown', (e) => setPos(getMousePos(canvasRef.current, e)));\r\n        document.addEventListener('mouseenter', (e) => setPos(getMousePos(canvasRef.current, e)));\r\n    }, []);\r\n\r\n    return (\r\n        <canvas ref={canvasRef} id=\"canvas\" height=\"280\" width=\"280\"></canvas>\r\n    )\r\n}\r\n\r\nexport default Canvas;","C:\\Users\\alimu\\Documents\\Projects\\native-ann-mnist-classifier\\client\\mnist-classifier\\src\\Components\\PredictionBar.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":13,"column":8,"nodeType":"35","messageId":"36","endLine":13,"endColumn":20},{"ruleId":"37","severity":1,"message":"38","line":91,"column":11,"nodeType":"39","endLine":91,"endColumn":60},{"ruleId":"40","severity":1,"message":"41","line":46,"column":8,"nodeType":"42","endLine":46,"endColumn":10,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'createMixins' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [draw]",{"range":"49","text":"50"},[1386,1388],"[draw]"]